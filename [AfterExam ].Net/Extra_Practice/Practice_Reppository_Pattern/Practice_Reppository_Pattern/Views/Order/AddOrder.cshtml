@model Practice_Reppository_Pattern.Models.Models.OrderModel

@{
    ViewBag.Title = "AddOrder";
}

<h4>
    Add Order
</h4>
<h5 id="errorH" class="text-danger"></h5>

@using (Html.BeginForm())
{
    @Html.HiddenFor(model => model.userId)
    @Html.HiddenFor(model => model.OrderTotalQuantity)
    @Html.HiddenFor(model => model.OrderDate)
    @Html.HiddenFor(model => model.orderAmount)
    @Html.HiddenFor(model => model.AfterGST)
    @Html.HiddenFor(model => model.TotalPayable)

    <div class="container-fluid">

        <div class="form-group">
            @Html.LabelFor(model => model.itemId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.itemId, new SelectList(Model.itemList, "Id", "ItemName"), new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.orderItemQty, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.orderItemQty, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="col-md-offset-2 col-md-10">
            <input type="button" value="Create" class="btn btn-default" id="AddButton" />
        </div>
        <div class="form-group row mb-3">
            @Html.LabelFor(model => model.couponCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.couponCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.couponCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div>
            <button input type="button" id="couponBtn">Apply Coupon </button>
        </div>
        <div class="form-group row ">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Place Order" id="placeOrderBtn" class="btn btn-primary" />
            </div>
        </div>

    </div>
}

<div class="table-responsive">
    <table class="table table-bordered" id="orderTable">
        <thead>
            <tr>
                <th>Item Name</th>
                <th>Quantity</th>
                <th>Amount</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody id="orderTableBody">
        </tbody>
        <tfoot class="mt-3">
            <tr>
                <td colspan="3">Total <span id="totalItemSpan"></span> items</td>
                <td>Total <span id="totalPayAmountSpan"></span></td>
                <td></td>
            </tr>
        </tfoot>
    </table>
    <div class="">
        <p>SGST : 5% <span id="sgstSpan"></span></p>
        <p>CGST : 5% <span id="cgstSpan"></span></p>
        <p>Total payable amount <span id="totalPayAmount"></span></p>

        <p>Net payable amount <span id="netPayAmount"></span></p>
    </div>
</div>
<script src="~/Scripts/jquery-3.4.1.js"></script>
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script>
    $(document).ready(function () {
        $('#AddButton').click(function () {
            $.ajax({
                type: "get",
                url: "/GetData/GetItemPrice?id=" + $('#itemId').val(),
                success: function (res) {
                    if ($('#orderItemQty').val() <= 0) {
                        $("#orderItemQty").next().html("Please enter quantity");
                    }
                    else {
                        //data = JSON.parse(res);
                        //console.log(data);
                        $('#orderItemQty').next().html("");
                        let qty = $('#orderItemQty').val();
                        let total = qty * res.Price;
                        console.log(res.Price)
                        let row = `<tr>
                            <td>${res.ItemName}</td>
                            <td>${qty}</td>
                            <td>${res.Price}</td>
                            <td>${total}</td>
                            <td>
                            <button onclick="EditItem(this)" type="button" class="btn btn-info">Edit</button>
                            <button onclick="DeleteItem(this)" type="button" class="btn btn-danger">Delete</button>
                            </td>
                        </tr>`;

                        $("#orderTableBody").append(row);
                        $("#orderItemQty").val("0");
                        $("#itemId").val("");
                        showTotalItems();
                    }
                }
            })
        })

        $("#couponBtn").click(function () {
            $.ajax({
                type: "GET",
                url: "/GetData/GetCouponDiscount?couponCode=" + $("#couponCode").val(),
                success: function (res) {
                    if (res != "" && res.couponUsageLimit >= 1) {
                        console.log(res);
                        if (res.couponType == 1) {
                            let finalAmount = Number($("#totalPayAmount").html()) - res.couponFlatAmount;
                            finalAmount = Math.floor(finalAmount);
                            $("#netPayAmount").html(finalAmount);
                        }
                        else if (res.couponType == 0) {
                            let TotalPay = Number($("#totalPayAmount").html());
                            let finalAmount = TotalPay - (TotalPay * res.couponPercentage * 0.01);
                            finalAmount = Math.floor(finalAmount);
                            $("#netPayAmount").html(finalAmount);
                        }
                        $("#couponP").html("Coupon applied successfully");
                    }
                    else {
                        $("#couponP").html("Invalid Coupon");
                    }
                }
            })
        });

        $("form").on("submit", () => {

            let totalAmount = Number($("#totalPayAmountSpan").html());
            $("#orderAmount").val(totalAmount);
            let afterGst = Number($("#sgstSpan").html());
            $("#afterGst").val(afterGst);
            let netAmount = Number($("#netPayAmount").html());
            $("#totalPayable").val(netAmount);
            let totalQuantity = Number($("#totalItemSpan").html());
            $("#orderTotalQty").val(totalQuantity);
        })

        $("#placeOrderBtn").click(function () {
            if ($("#totalPayAmountSpan").html() == "") {
                $("#errorH").html("OrderAmount can't be null");
            }
            else if ($("#totalItemSpan").html() == "") {
                $("#errorH").html("OrderItems can't be null");
            }
            else {
                $("form").trigger("submit");
            }
        })

    

        function EditItem(currrentItem) {
            let currentRow = $(currrentItem).closest("tr");
            console.log(currentRow.find("input").length)
            if (currentRow.find("input").length <= 0) {
                let currentQty = currentRow.find("td:eq(1)").html();
                let row = `<input type="number" class="form-control" id="ItemQty" value="${currentQty}">`;
                currentRow.find("td:eq(1)").empty().append(row);
                currentRow.find("button:eq(0)").html("Save");
            }
            else {
                let currentQty = currentRow.find("input:eq(0)");
                if (currentQty.val() <= 0) {
                    $("#orderItemQty").next().html("Please enter quantity");
                }
                else {
                    $("#orderItemQty").next().html("");
                    let row = `${currentQty.val()}`;
                    currentRow.find("td:eq(1)").empty().append(row);
                    let total = currentRow.find("td:eq(2)").html() * currentQty.val();
                    currentRow.find("td:eq(3)").html(total);
                    currentRow.find("button:eq(0)").html("Edit");
                    showTotalItems();
                }
            }
        }

        function DeleteItem(currentItem) {
            let ans = confirm("Are you sure to delete ?");
            if (ans) {
                $(currentItem).closest("tr").remove();
                showTotalItems();
            }
        }

        function showTotalItems() {
            let totalItems = 0;
            let totalAmount = 0;
            $("#orderTable tbody tr").each(function () {
                totalItems += Number($(this).find("td:eq(1)").html());
                totalAmount += Number($(this).find("td:eq(3)").html());
            })
            $("#totalItemSpan").html(totalItems);
            let gst = totalAmount + totalAmount * 0.05;
            $("#sgstSpan").html(gst);
            $("#cgstSpan").html(gst);
            $("#totalPayAmount").html(gst + gst);
            $("#sgstSpan").html();
            $("#totalPayAmountSpan").html(totalAmount);
            $("#netPayAmount").html(gst + gst);
        }

    })
</script>

